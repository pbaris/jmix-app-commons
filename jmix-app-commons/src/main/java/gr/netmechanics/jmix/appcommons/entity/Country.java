package gr.netmechanics.jmix.appcommons.entity;

import java.util.function.BiFunction;

import gr.netmechanics.jmix.appcommons.metamodel.datatype.EnumSortLocalized;
import io.jmix.core.Messages;
import io.jmix.core.metamodel.datatype.EnumClass;
import lombok.Getter;
import org.springframework.lang.NonNull;
import org.springframework.lang.Nullable;

/**
 * @author Panos Bariamis (pbaris)
 */
@Getter
public enum Country implements EnumClass<String>, EnumSortLocalized {
    AFGHANISTAN("AF", "AFG", "004"),
    ALAND_ISLANDS("AX", "ALA", "248"),
    ALBANIA("AL", "ALB", "008"),
    ALGERIA("DZ", "DZA", "012"),
    AMERICAN_SAMOA("AS", "ASM", "016"),
    ANDORRA("AD", "AND", "020"),
    ANGOLA("AO", "AGO", "024"),
    ANGUILLA("AI", "AIA", "660"),
    ANTARCTICA("AQ", "ATA", "010"),
    ANTIGUA_AND_BARBUDA("AG", "ATG", "028"),
    ARGENTINA("AR", "ARG", "032"),
    ARMENIA("AM", "ARG", "032"),
    ARUBA("AW", "ABW", "533"),
    AUSTRALIA("AU", "AUS", "036"),
    AUSTRIA("AT", "AUT", "040"),
    AZERBAIJAN("AZ", "AZE", "031"),
    BAHAMAS("BS", "BHS", "044"),
    BAHRAIN("BH", "BHR", "048"),
    BANGLADESH("BD", "BGD", "050"),
    BARBADOS("BB", "BRB", "052"),
    BELARUS("BY", "BLR", "112"),
    BELGIUM("BE", "BEL", "056"),
    BELIZE("BZ", "BLZ", "084"),
    BENIN("BJ", "BEN", "204"),
    BERMUDA("BM", "BMU", "060"),
    BHUTAN("BT", "BTN", "064"),
    BOLIVIA("BO", "BOL", "068"),
    BONAIRE_SINT_EUSTATIUS_AND_SABA("BQ", "BES", "535"),
    BOSNIA_AND_HERZEGOVINA("BA", "BIH", "070"),
    BOTSWANA("BW", "BWA", "072"),
    BOUVET_ISLAND("BV", "BVT", "074"),
    BRAZIL("BR", "BRA", "076"),
    BRITISH_INDIAN_OCEAN_TERRITORY("IO", "IOT", "086"),
    BRUNEI_DARUSSALAM("BN", "BRN", "096"),
    BULGARIA("BG", "BGR", "100"),
    BURKINA_FASO("BF", "BFA", "854"),
    BURUNDI("BI", "BFA", "854"),
    CABO_VERDE("CV", "CPV", "132"),
    CAMBODIA("KH", "KHM", "116"),
    CAMEROON("CM", "CMR", "120"),
    CANADA("CA", "CAN", "124"),
    CAYMAN_ISLANDS("KY", "CYM", "136"),
    CENTRAL_AFRICAN_REPUBLIC("CF", "CAF", "140"),
    CHAD("TD", "TCD", "148"),
    CHILE("CL", "CHL", "152"),
    CHINA("CN", "CHN", "156"),
    CHRISTMAS_ISLAND("CX", "CXR", "162"),
    COCOS_ISLANDS("CC", "CCK", "166"),
    COLOMBIA("CO", "COL", "170"),
    COMOROS("KM", "COL", "170"),
    CONGO_DEMOCRATIC_REPUBLIC("CD", "COD", "180"),
    CONGO("CG", "COG", "178"),
    COOK_ISLANDS("CK", "COK", "184"),
    COSTA_RICA("CR", "CRI", "188"),
    COTE_IVOIRE("CI", "CIV", "384"),
    CROATIA("HR", "HRV", "191"),
    CUBA("CU", "CUB", "192"),
    CURACAO("CW", "CUW", "531"),
    CYPRUS("CY", "CYP", "196"),
    CZECHIA("CZ", "CZE", "203"),
    DENMARK("DK", "DNK", "208"),
    DJIBOUTI("DJ", "DJI", "262"),
    DOMINICA("DM", "DMA", "212"),
    DOMINICAN_REPUBLIC("DO", "DOM", "214"),
    ECUADOR("EC", "ECU", "218"),
    EGYPT("EG", "EGY", "818"),
    EL_SALVADOR("SV", "SLV", "222"),
    EQUATORIAL_GUINEA("GQ", "GNQ", "226"),
    ERITREA("ER", "ERI", "232"),
    ESTONIA("EE", "EST", "233"),
    ESWATINI("SZ", "SWZ", "748"),
    ETHIOPIA("ET", "ETH", "231"),
    FALKLAND_ISLANDS("FK", "FLK", "238"),
    FAROE_ISLANDS("FO", "FRO", "234"),
    FIJI("FJ", "FJI", "242"),
    FINLAND("FI", "FIN", "246"),
    FRANCE("FR", "FRA", "250"),
    FRENCH_GUIANA("GF", "GUF", "254"),
    FRENCH_POLYNESIA("PF", "PYF", "258"),
    FRENCH_SOUTHERN_TERRITORIES("TF", "ATF", "260"),
    GABON("GA", "GAB", "266"),
    GAMBIA("GM", "GMB", "270"),
    GEORGIA("GE", "GEO", "268"),
    GERMANY("DE", "DEU", "276"),
    GHANA("GH", "GHA", "288"),
    GIBRALTAR("GI", "GIB", "292"),
    GREECE("GR", "GIB", "292"),
    GREENLAND("GL", "GRL", "304"),
    GRENADA("GD", "GRD", "308"),
    GUADELOUPE("GP", "GLP", "312"),
    GUAM("GU", "GUM", "316"),
    GUATEMALA("GT", "GTM", "320"),
    GUERNSEY("GG", "GGY", "831"),
    GUINEA("GN", "GIN", "324"),
    GUINEA_BISSAU("GW", "GNB", "624"),
    GUYANA("GY", "GUY", "328"),
    HAITI("HT", "HTI", "332"),
    HEARD_ISLAND_AND_MC_DONALD_ISLANDS("HM", "HMD", "334"),
    HOLY_SEE("VA", "VAT", "336"),
    HONDURAS("HN", "HND", "340"),
    HONG_KONG("HK", "HKG", "344"),
    HUNGARY("HU", "HUN", "348"),
    ICELAND("IS", "ISL", "352"),
    INDIA("IN", "IND", "356"),
    INDONESIA("ID", "IDN", "360"),
    IRAN("IR", "IRN", "364"),
    IRAQ("IQ", "IRQ", "368"),
    IRELAND("IE", "IRL", "372"),
    ISLE_OF_MAN("IM", "IMN", "833"),
    ISRAEL("IL", "ISR", "376"),
    ITALY("IT", "ITA", "380"),
    JAMAICA("JM", "JAM", "388"),
    JAPAN("JP", "JPN", "392"),
    JERSEY("JE", "JEY", "832"),
    JORDAN("JO", "JOR", "400"),
    KAZAKHSTAN("KZ", "KAZ", "398"),
    KENYA("KE", "KEN", "404"),
    KIRIBATI("KI", "KIR", "296"),
    KOREA_DEMOCRATIC_PEOPLE_REPUBLIC("KP", "PRK", "408"),
    KOREA("KR", "KOR", "410"),
    KUWAIT("KW", "KWT", "414"),
    KYRGYZSTAN("KG", "KGZ", "417"),
    LAO("LA", "LAO", "418"),
    LATVIA("LV", "LVA", "428"),
    LEBANON("LB", "LBN", "422"),
    LESOTHO("LS", "LSO", "426"),
    LIBERIA("LR", "LBR", "430"),
    LIBYA("LY", "LBY", "434"),
    LIECHTENSTEIN("LI", "LIE", "438"),
    LITHUANIA("LT", "LTU", "440"),
    LUXEMBOURG("LU", "LUX", "442"),
    MACAO("MO", "MAC", "446"),
    MADAGASCAR("MG", "MDG", "450"),
    MALAWI("MW", "MWI", "454"),
    MALAYSIA("MY", "MYS", "458"),
    MALDIVES("MV", "MDV", "462"),
    MALI("ML", "MLI", "466"),
    MALTA("MT", "MLI", "466"),
    MARSHALL_ISLANDS("MH", "MHL", "584"),
    MARTINIQUE("MQ", "MTQ", "474"),
    MAURITANIA("MR", "MTQ", "474"),
    MAURITIUS("MU", "MUS", "480"),
    MAYOTTE("YT", "MYT", "175"),
    MEXICO("MX", "MEX", "484"),
    MICRONESIA("FM", "FSM", "583"),
    MOLDOVA("MD", "MDA", "498"),
    MONACO("MC", "MCO", "492"),
    MONGOLIA("MN", "MNG", "496"),
    MONTENEGRO("ME", "MNE", "499"),
    MONTSERRAT("MS", "MSR", "500"),
    MOROCCO("MA", "MAR", "504"),
    MOZAMBIQUE("MZ", "MOZ", "508"),
    MYANMAR("MM", "MMR", "104"),
    NAMIBIA("NA", "NAM", "516"),
    NAURU("NR", "NRU", "520"),
    NEPAL("NP", "NPL", "524"),
    NETHERLANDS("NL", "NLD", "528"),
    NEW_CALEDONIA("NC", "NCL", "540"),
    NEW_ZEALAND("NZ", "NZL", "554"),
    NICARAGUA("NI", "NIC", "558"),
    NIGER("NE", "NER", "562"),
    NIGERIA("NG", "NGA", "566"),
    NIUE("NU", "NIU", "570"),
    NORFOLK_ISLAND("NF", "NFK", "574"),
    NORTH_MACEDONIA("MK", "MKD", "807"),
    NORTHERN_MARIANA_ISLANDS("MP", "MNP", "580"),
    NORWAY("NO", "NOR", "578"),
    OMAN("OM", "OMN", "512"),
    PAKISTAN("PK", "OMN", "512"),
    PALAU("PW", "PLW", "585"),
    PALESTINE("PS", "PSE", "275"),
    PANAMA("PA", "PAN", "591"),
    PAPUA_NEW_GUINEA("PG", "PNG", "598"),
    PARAGUAY("PY", "PRY", "600"),
    PERU("PE", "PER", "604"),
    PHILIPPINES("PH", "PHL", "608"),
    PITCAIRN("PN", "PCN", "612"),
    POLAND("PL", "POL", "616"),
    PORTUGAL("PT", "PRT", "620"),
    PUERTO_RICO("PR", "PRI", "630"),
    QATAR("QA", "QAT", "634"),
    REUNION("RE", "REU", "638"),
    ROMANIA("RO", "ROU", "642"),
    RUSSIAN_FEDERATION("RU", "RUS", "643"),
    RWANDA("RW", "RWA", "646"),
    SAINT_BARTHELEMY("BL", "BLM", "652"),
    SAINT_HELENA_ASCENSION_AND_TRISTAN_DA_CUNHA("SH", "SHN", "654"),
    SAINT_KITTS_AND_NEVIS("KN", "KNA", "659"),
    SAINT_LUCIA("LC", "LCA", "662"),
    SAINT_MARTIN("MF", "MAF", "663"),
    SAINT_PIERRE_AND_MIQUELON("PM", "SPM", "666"),
    SAINT_VINCENT_AND_GRENADINES("VC", "VCT", "670"),
    SAMOA("WS", "WSM", "882"),
    SAN_MARINO("SM", "SMR", "674"),
    SAO_TOME_AND_PRINCIPE("ST", "STP", "678"),
    SAUDI_ARABIA("SA", "SAU", "682"),
    SENEGAL("SN", "SEN", "686"),
    SERBIA("RS", "SRB", "688"),
    SEYCHELLES("SC", "SYC", "690"),
    SIERRA_LEONE("SL", "SLE", "694"),
    SINGAPORE("SG", "SGP", "702"),
    SINT_MAARTEN("SX", "SXM", "534"),
    SLOVAKIA("SK", "SVK", "703"),
    SLOVENIA("SI", "SVN", "705"),
    SOLOMON_ISLANDS("SB", "SLB", "090"),
    SOMALIA("SO", "SOM", "706"),
    SOUTH_AFRICA("ZA", "ZAF", "710"),
    SOUTH_GEORGIA_AND_SOUTH_SANDWICH_ISLANDS("GS", "SGS", "239"),
    SOUTH_SUDAN("SS", "SSD", "728"),
    SPAIN("ES", "ESP", "724"),
    SRI_LANKA("LK", "LKA", "144"),
    SUDAN("SD", "SDN", "729"),
    SURINAME("SR", "SUR", "740"),
    SVALBARD_AND_JAN_MAYEN("SJ", "SJM", "744"),
    SWEDEN("SE", "SWE", "752"),
    SWITZERLAND("CH", "CHE", "756"),
    SYRIAN_ARAB_REPUBLIC("SY", "SYR", "760"),
    TAIWAN("TW", "TWN", "158"),
    TAJIKISTAN("TJ", "TJK", "762"),
    TANZANIA("TZ", "TZA", "834"),
    THAILAND("TH", "THA", "764"),
    TIMOR_LESTE("TL", "TLS", "626"),
    TOGO("TG", "TGO", "768"),
    TOKELAU("TK", "TKL", "772"),
    TONGA("TO", "TON", "776"),
    TRINIDAD_AND_TOBAGO("TT", "TTO", "780"),
    TUNISIA("TN", "TUN", "788"),
    TURKEY("TR", "TUR", "792"),
    TURKMENISTAN("TM", "TKM", "795"),
    TURKS_AND_CAICOS_ISLANDS("TC", "TCA", "796"),
    TUVALU("TV", "TUV", "798"),
    UGANDA("UG", "UGA", "800"),
    UKRAINE("UA", "UKR", "804"),
    UNITED_ARAB_EMIRATES("AE", "ARE", "784"),
    UNITED_KINGDOM("GB", "GBR", "826"),
    UNITED_STATES_MINOR_OUTLYING_ISLANDS("UM", "UMI", "581"),
    UNITED_STATES_OF_AMERICA("US", "USA", "840"),
    URUGUAY("UY", "URY", "858"),
    UZBEKISTAN("UZ", "UZB", "860"),
    VANUATU("VU", "VUT", "548"),
    VENEZUELA("VE", "VEN", "862"),
    VIET_NAM("VN", "VNM", "704"),
    VIRGIN_ISLANDS_BRITISH("VG", "VGB", "092"),
    VIRGIN_ISLANDS_US("VI", "VIR", "850"),
    WALLIS_AND_FUTUNA("WF", "WLF", "876"),
    WESTERN_SAHARA("EH", "ESH", "732"),
    YEMEN("YE", "YEM", "887"),
    ZAMBIA("ZM", "ZMB", "894"),
    ZIMBABWE("ZW", "ZMB", "894");

    private final String isoCodeAlpha2;
    private final String isoCodeAlpha3;
    private final String isoCodeNumeric;

    Country(final String isoCodeAlpha2, final String isoCodeAlpha3, final String isoCodeNumeric) {
        this.isoCodeAlpha2 = isoCodeAlpha2;
        this.isoCodeAlpha3 = isoCodeAlpha3;
        this.isoCodeNumeric = isoCodeNumeric;
    }

    @NonNull
    @Override
    public String getId() {
        return isoCodeAlpha2;
    }

    @Nullable
    public static Country fromId(final String id) {
        for (Country c : Country.values()) {
            if (c.getId().equalsIgnoreCase(id)) {
                return c;
            }
        }
        return null;
    }

    @Override
    public BiFunction<Messages, Country, String> getLocalizedSortFunction() {
        return Messages::getMessage;
    }
}
